#!/usr/bin/env perl
use v5.14.1;
use Pod::Usage;
use Getopt::Long;
use PICA::Data ':all';
use Catmandu -all;

GetOptions( \my %opt, 'help|?', 'exist|e', 'count|c', 'path|p:s' ) || pod2usage(2);
pod2usage(1) if $opt{help} or !@ARGV;

$opt{path} //= join ",", @{Catmandu->config->{'coli-rich'}{fields}};

my @fields = map { PICA::Path->new($_) } ('003@', split /[ ,|]/, $opt{path});

my $concordance = qr{([a-z]+)[<>-]{1,2}([a-z])+}i;

for my $mapping (@ARGV) {

    if ($mapping =~ qr{^(coli-conc )?($concordance)$}i) {
        $mapping = "coli-conc $2";
    } elsif ($mapping !~ qr{^https://coli-conc.gbv.de/api/mappings/[0-9a-f-]+$}) {
        error("invalid mapping URI or concordance: $mapping") and next;
    }

    if ($opt{exist}) {
        eval { importer( 'JSON', file => $_ )->next->{mapping} } eq $mapping
            or ( error("Mapping does not exist: $_") and next );
    }

    my $cql = "pica.seq=\"" . ($mapping =~ s/[\/:.<>-]+/ /gr) . '"';

    if ($opt{count}) {
        say importer('swb-299', query => $cql, parser => 'meta')->next->{numberOfRecords};
    } else {
        my $importer = importer('swb-299', query => $cql);
        exporter('pp')->add_many($importer->map(sub { pica_fields(shift, @fields) }));
    }
}

sub error { 
    state $code;
    warn "$_[0]\n" if @_; 
    $code = 1 if @_; 
    $code;
}

exit error;

=head1 SYNOPSIS

 titles-with-mappings [options] <mapping-uri|concordance...>

 Options:
   --help|-h        this help message
   --exist|-e       first check whether the mapping exists
   --count|-c       only count number of titles
   --path|-p        PICA+ path expressions to filter fields (e.g. 045Q,045F)

 Examples:

  # get PPN fields of all titles enriched with a specific mapping
  titles-with-mappings -p 003@ https://coli-conc.gbv.de/api/mappings/d415aba4-14c2-4a9c-822a-1a589787545d 

  # count titles enriched with RVK-BK mappings
  titles-with-mappings -c rvk-bk    

=cut
